/*Version 1: Kan vise nuværende måned og har strukturen af en kalender.
Version 2: Kan vise flere måneder, DDS farve skema, Der skulle kunne reserveres kanoer og Ændre formatering til være mere google kalender agtig
Version 3: Hjemmesiden skal rappotere til databasen og vice versa, Der skal sættes et system om til at slette data i databasen og Reservere flere datoer på en gang.
Version 4: Hjemmesiden opdager nu om den skal formateres til mobil eller computer
Version 5: Kan nu ændre start dato, Local Storage added, Reservere nu hele perioden, Man kan ikke længere overskride andres reserveringer, Changed dropdown menu length and Obfuscat code

Mangler:

*/
const firebaseConfig = {
    apiKey: "AIzaSyCfPEKOi56aanIsKWhaMPjvfXwA_d28nXM",
    authDomain: "kano-kalender-44ce5.firebaseapp.com",
    databaseURL: "https://kano-kalender-44ce5-default-rtdb.europe-west1.firebasedatabase.app",
    projectId: "kano-kalender-44ce5",
    storageBucket: "kano-kalender-44ce5.appspot.com",
    messagingSenderId: "361845659163",
    appId: "1:361845659163:web:18fc9613fb8c76b72ccabe",
    measurementId: "G-4M1C25VHRE"
  };
  firebase.initializeApp(firebaseConfig);
// Startup process and much more
window.onload = window.resizeTo(window.screen.availWidth / 2, window.screen.availHeight / 2);
window.onload = cleanup();
const date = new Date();
var observedMonth = date.getMonth();
var observedYear = date.getFullYear();
var numberWeekdays = daysInMonth(observedMonth);
var currentDay = date.getDate();
var nummerCur = 0;
var startNumber = 0;
const database = firebase.database().ref('/');
var changeAllowed = 0;

// Check if mobile or tablet
const detectDeviceType = () =>
    /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)
      ? 'Mobile'
      : 'Desktop';

window.onload = setCurrentDate(date, currentDay);
window.onload = sortDays(observedMonth, observedYear, numberWeekdays);
window.onload = cleanDatabase(observedYear);

const resizeOps = () => {
    document.documentElement.style.setProperty("--vh", window.innerHeight * 0.01 + "px");
    document.documentElement.style.setProperty("--vw", window.innerWidth * 0.01 + "px");
  };
  
resizeOps();
window.addEventListener("resize", resizeOps);

function setCurrentDate(date, day) {
    
    let month = monthTranslator(date.getMonth());
    let year = date.getFullYear();

    document.getElementById("year").innerHTML  = observedYear;
    document.getElementById("month").innerHTML = monthTranslator(observedMonth);

    if (detectDeviceType() == 'Mobile') {
        // .month
        document.styleSheets[0].cssRules[2].style.width = "100vw";

        // .month ul
        document.styleSheets[0].cssRules[3].style.padding = ".5vh 0vw";

        // .month ul li
        document.styleSheets[0].cssRules[4].style.fontSize = "2vw";

        // .info
        document.styleSheets[0].cssRules[5].style.fontSize = "2vw";
        document.styleSheets[0].cssRules[5].style.width = "12vw";

        // .month prev
        document.styleSheets[0].cssRules[7].style.fontSize = "13vw";

        // .month next
        document.styleSheets[0].cssRules[8].style.fontSize = "13vw";

        // .weekdays
        document.styleSheets[0].cssRules[9].style.width = "100vw";
        document.styleSheets[0].cssRules[9].style.padding = "0vh 0vw";

        // .weekdays li
        document.styleSheets[0].cssRules[10].style.margin = "0vh .2vw";
        document.styleSheets[0].cssRules[10].style.width = "12.4vw";

        // .days
        document.styleSheets[0].cssRules[11].style.width = "100vw";

        // .days div
        document.styleSheets[0].cssRules[12].style.margin = "0 0";
        document.styleSheets[0].cssRules[12].style.width = "12.3vw";
        document.styleSheets[0].cssRules[12].style.height = "11.6vh";

        // .days div .active
        document.styleSheets[0].cssRules[13].style.fontSize = "2vw";

        // .days div .reservation
        document.styleSheets[0].cssRules[15].style.margin = "0.5% 2%";
        document.styleSheets[0].cssRules[15].style.width = "92%";
        document.styleSheets[0].cssRules[16].style.margin = "0.5% 2%";
        document.styleSheets[0].cssRules[16].style.width = "92%";
        document.styleSheets[0].cssRules[17].style.margin = "0.5% 2%";
        document.styleSheets[0].cssRules[17].style.width = "92%";
        document.styleSheets[0].cssRules[18].style.margin = "0.5% 2%";
        document.styleSheets[0].cssRules[18].style.width = "92%";
        document.styleSheets[0].cssRules[19].style.margin = "0.5% 2%";
        document.styleSheets[0].cssRules[19].style.width = "92%";
        document.styleSheets[0].cssRules[20].style.margin = "0.5% 2%";
        document.styleSheets[0].cssRules[20].style.width = "92%";
        document.styleSheets[0].cssRules[21].style.margin = "0.5% 2%";
        document.styleSheets[0].cssRules[21].style.width = "92%";
        document.styleSheets[0].cssRules[22].style.margin = "0.5% 2%";
        document.styleSheets[0].cssRules[22].style.width = "92%";
        document.styleSheets[0].cssRules[23].style.margin = "0.5% 2%";
        document.styleSheets[0].cssRules[23].style.width = "92%";
        document.styleSheets[0].cssRules[24].style.margin = "0.5% 2%";
        document.styleSheets[0].cssRules[24].style.width = "92%"
    }
}

function monthTranslator(number) {
    switch (number) {
        case 0: return "Januar" 
        break;
        case 1: return "Februar" 
        break;
        case 2: return "Marts" 
        break;
        case 3: return "April" 
        break;
        case 4: return "Maj" 
        break;
        case 5: return "Juni" 
        break;
        case 6: return "Juli" 
        break;
        case 7: return "August" 
        break;
        case 8: return "September" 
        break;
        case 9: return "Oktober" 
        break;
        case 10: return "November" 
        break;
        case 11: return "December" 
        break;
    }
}

function daysInMonth (month) {
    switch (month) {
        case 0: return 31;
        break;
        case 1: return 28;
        break;
        case 2: return 31;
        break;
        case 3: return 30;
        break;
        case 4: return 31;
        break;
        case 5: return 30;
        break;
        case 6: return 31;
        break;
        case 7: return 31;
        break;
        case 8: return 30;
        break;
        case 9: return 31;
        break;
        case 10: return 30;
        break;
        case 11: return 31;
        break;
    }
}

function sortDays(month, year, numberWeekdays) {

    let dateString = (month + 1) + "/1/" + year;
    let date = new Date(dateString);
    startNumber = findFirstDay(date);

    let currentDate = new Date();
    let currentDay = currentDate.getDate();
    let currentMonth = currentDate.getMonth();
    let currentYear = currentDate.getFullYear();

    for(let i = 1; i <= numberWeekdays; i++){
        database.once('value', snap => {
            let dag = snap.child(observedYear + '/' + (observedMonth + 1) + '/' + (i + startNumber)).val();
            if (dag != null) {
                document.getElementById("navn"   + (i + startNumber)).innerHTML = "Navn: " + "<br>&nbsp;" + dag.Navn;
                document.getElementById("gruppe" + (i + startNumber)).innerHTML = "Gruppe: " + "<br>&nbsp;" + dag.Gruppenavn;
                document.getElementById("R"      + (i + startNumber)).classList.remove("reservation");
                document.getElementById("R"      + (i + startNumber)).classList.add(dag.Gruppe);
            };
        });
        document.getElementById("Day" + (i + startNumber)).innerHTML = i;
        document.getElementById("Day" + (i + startNumber)).style.visibility = "visible";
        document.getElementById("Div" + (i + startNumber)).style.visibility = "visible";
        document.getElementById("R"   + (i + startNumber)).style.visibility = "visible";
        document.getElementById("Day" + (i + startNumber)).classList.add('active');
        if((currentDay == i) && (currentMonth == month) && (currentYear == year)){
            document.getElementById("Day" + (i + startNumber)).classList.add('current');
        }
    }
    for(i = 29; i < 32; i++ ) {
        document.querySelectorAll("#fra option").forEach(opt => {
            if (opt.value == i){
                opt.disabled = false;
                opt.removeAttribute("hidden");
            }
        });

        document.querySelectorAll("#til option").forEach(opt => {
            if (opt.value == i){
                opt.disabled = false;
                opt.removeAttribute("hidden");
            }
        });
    }
    for(i = (numberWeekdays + 1); i < 32; i++) {
        document.querySelectorAll("#fra option").forEach(opt => {
            if (opt.value == i){
                opt.disabled = true;
                opt.hidden = "hidden";
            }
        });

        document.querySelectorAll("#til option").forEach(opt => {
            if (opt.value == i){
                opt.disabled = true;
                opt.hidden = "hidden";
            }
        });
    }
}

function cleanup() {
    for(let i=1; i<=37; i++){
        document.getElementById("Day"    + i).innerHTML = 1;
        document.getElementById("Day"    + i).classList.remove('current');
        document.getElementById("Day"    + i).style.visibility = "hidden";
        document.getElementById("Div"    + i).style.visibility = "hidden";
        document.getElementById("R"      + i).style.visibility = "hidden";
        document.getElementById("Day"    + i).classList.remove('active');
        document.getElementById("navn"   + i).innerHTML = "Navn: " + "<br>&nbsp;";
        document.getElementById("gruppe" + i).innerHTML = "Gruppe: " + "<br>&nbsp;";
        document.getElementById("R"      + i).classList.remove("Alugod");
        document.getElementById("R"      + i).classList.remove("Sjangali");
        document.getElementById("R"      + i).classList.remove("Ballerup");
        document.getElementById("R"      + i).classList.remove("Byspejderne");
        document.getElementById("R"      + i).classList.remove("Herlev2");
        document.getElementById("R"      + i).classList.remove("Skovlunde");
        document.getElementById("R"      + i).classList.remove("Ravnehus");
        document.getElementById("R"      + i).classList.remove("Hjortespring");
        document.getElementById("R"      + i).classList.remove("Mjølner");
        document.getElementById("R"      + i).classList.add("reservation");
    }
}

function forward() {
    cleanup();
    document.getElementById("formR").style.display = "none";
    document.getElementById("formP").style.display = "none";
    if(observedMonth == 11){
        observedMonth = 0;
        observedYear++;
    } else {
        observedMonth++;
    }

    numberWeekdays = daysInMonth(observedMonth );
    sortDays(observedMonth, observedYear, numberWeekdays);
    document.getElementById("year").innerHTML  = observedYear;
    document.getElementById("month").innerHTML = monthTranslator(observedMonth );
}

function backward() {
    cleanup();
    document.getElementById("formR").style.display = "none";
    document.getElementById("formP").style.display = "none";
    if(observedMonth == 0){
        observedMonth = 11;
        --observedYear;
    } else {
        observedMonth--;
    }

    numberWeekdays = daysInMonth(observedMonth);
    sortDays(observedMonth, observedYear, numberWeekdays);
    document.getElementById("year").innerHTML  = observedYear;
    document.getElementById("month").innerHTML = monthTranslator(observedMonth);
}

function reserver(nummer) {
    if (document.getElementById("Day" + nummer).style.visibility == "hidden" | 
        document.getElementById("formP").style.display == "block"            |
        document.getElementById("formR").style.display == "block"){
    } else {
        nummerCur = nummer;
        if((document.getElementById("navn" + nummer).innerHTML == "Navn: <br>&nbsp;")){
            document.getElementById("formR").style.display = "block";
            if(localStorage.getItem("Navn") != null) {
                document.getElementsByTagName('input')[0].value = localStorage.getItem("Navn");
                document.getElementById("gruppe").value = localStorage.getItem("Gruppe");
                document.getElementsByTagName('input')[1].value = localStorage.getItem("Kode");
            }
            document.getElementById("fra").value = nummer - startNumber;
            document.getElementById("til").value = nummer - startNumber;
        } else {
            document.getElementById("formP").style.display = "block";
            localStorage.setItem("tal",nummer);
            if(localStorage.getItem("Kode") != null) {
                document.getElementsByTagName('input')[2].value = localStorage.getItem("Kode");
            }
        }
    }
}

function closeForm() {
    document.getElementById("formR").style.display = "none";
    document.getElementById("formP").style.display = "none";
  }
  
function closeR() {
    let navn   = document.getElementsByTagName('input')[0].value;
    let gruppe = document.getElementById("gruppe").value;
    let kode   = document.getElementsByTagName('input')[1].value;
    let gruppenavn = document.getElementById("gruppe").options[document.getElementById("gruppe").selectedIndex].innerHTML;

    if((navn != "") & (gruppe != "reservation") & (kode != "")) {
        let fra = document.getElementById("fra").value;
        let til = document.getElementById("til").value;
        nummerCur = startNumber + Number(fra);
        if (fra == til) {
            database.child(observedYear).child(observedMonth + 1).child(nummerCur).get().then((snap) => {
                if (snap.val() != null) {
                    alert("Dagen er optaget");
                } else {
                    database.child(observedYear + '/' + (observedMonth + 1)+ '/' + nummerCur).set({
                        Navn: navn,
                        Gruppe: gruppe,
                        Gruppenavn: gruppenavn,
                        Password: kode
                    });
                    document.getElementById("R"      + nummerCur).classList.remove("reservation");
                    document.getElementById("R"      + nummerCur).classList.add(gruppe);
                    document.getElementById("navn"   + nummerCur).innerHTML = "Navn: " + "<br>" + navn  ;
                    document.getElementById("gruppe" + nummerCur).innerHTML = "Gruppe: " + "<br>" + gruppenavn;
                }
            });
        } else {
            let periode = 0;

            if (Number(fra) > Number(til)) {
                periode = Number(til) + numberWeekdays - Number(fra);
            } else {
                periode = Number(til) - Number(fra);
            }
            
            let dayNum    = 0;
            let approved = 1;
            let dateString = (observedMonth + 2) + "/1/" + observedYear;
            let date = new Date(dateString);
            let newMonthStartDay = findFirstDay(date);

            if (changeAllowed == 1) {
                let gamleKode = localStorage.getItem("Kode");

                if (fra > til) {
                    database.child(observedYear).get().then((snap) => {
                        for (let k = 0; k<=periode;k++){
                            dayNum = Number(k) + Number(fra);
                            if (numberWeekdays < dayNum) {
                                let dbKode = snap.child(observedMonth + 2).child(dayNum + newMonthStartDay - Number(numberWeekdays)).child("Password").val();
                                if ((dbKode != gamleKode) & (dbKode != null)) {
                                    approved = 0;
                                }
                            } else {
                                let dbPass = snap.child(observedMonth + 1).child(dayNum).child("Password").val();
                                if ((dbPass != gamleKode) & (dbPass != null)) {
                                    approved = 0;
                                }
                            }
                        }

                        if (approved == 1) {
                            for(let i = 0; i<=periode;i++) {
                                dayNum = Number(i) + Number(fra);
                                if (Number(numberWeekdays) < dayNum) {
                                    database.child(observedYear).child(observedMonth + 2).child(dayNum + newMonthStartDay - Number(numberWeekdays)).set({
                                        Navn: navn,
                                        Gruppe: gruppe,
                                        Gruppenavn: gruppenavn,
                                        Password: kode
                                    });
                                } else {
                                    document.getElementById("R"      + (Number(fra) + startNumber + i)).classList.remove("reservation");
                                    document.getElementById("R"      + (Number(fra) + startNumber + i)).classList.add(gruppe);
                                    document.getElementById("navn"   + (Number(fra) + startNumber + i)).innerHTML = "Navn: " + "<br>" + navn  ;
                                    document.getElementById("gruppe" + (Number(fra) + startNumber + i)).innerHTML = "Gruppe: " + "<br>" + gruppenavn;
                                    database.child(observedYear).child(observedMonth + 1).child(dayNum).set({
                                        Navn: navn,
                                        Gruppe: gruppe,
                                        Gruppenavn: gruppenavn,
                                        Password: kode
                                    });
                                }
                            }
                            localStorage.setItem("Navn",navn);
                            localStorage.setItem("Gruppe",gruppe);
                            localStorage.setItem("Kode",kode);
                            document.getElementById("formR").style.display = "none";
                        } else {
                            alert("Der er dage som ikke er dine, der bliver overskrevet");
                        }
                    });
                } else {
                    database.child(observedYear).get().then((snap) => {
                        for (let k = 0; k<=periode;k++){
                            let dbKOrd = snap.child(observedMonth + 1).child(Number(fra) + Number(k)).child("Password").val();
                            if ((dbKOrd != gamleKode) & (dbKOrd != null)) {
                                approved = 0;
                            }
                        }

                        if (approved == 1) {
                            for(let i = 0; i<=periode;i++) {
                                document.getElementById("R"      + (Number(fra) + startNumber + i)).classList.remove("reservation");
                                document.getElementById("R"      + (Number(fra) + startNumber + i)).classList.add(gruppe);
                                document.getElementById("navn"   + (Number(fra) + startNumber + i)).innerHTML = "Navn: " + "<br>" + navn  ;
                                document.getElementById("gruppe" + (Number(fra) + startNumber + i)).innerHTML = "Gruppe: " + "<br>" + gruppenavn;
                                database.child(observedYear).child(observedMonth + 1).child(Number(fra) + Number(i)).set({
                                    Navn: navn,
                                    Gruppe: gruppe,
                                    Gruppenavn: gruppenavn,
                                    Password: kode
                                });
                            }
                            localStorage.setItem("Navn",navn);
                            localStorage.setItem("Gruppe",gruppe);
                            localStorage.setItem("Kode",kode);
                            document.getElementById("formR").style.display = "none";
                        } else {
                            alert("Nogle af datoerne er reserveret");
                        }
                    });
                }
            }else {
                if (fra > til) {
                    database.child(observedYear).get().then((snap) => {
                        for (let k = 0; k<=periode;k++){
                            dayNum = Number(k) + Number(fra);
                            if (numberWeekdays < dayNum) {
                                if (snap.child(observedMonth + 2).child(dayNum + newMonthStartDay - Number(numberWeekdays)).val() != null) {
                                    approved = 0;
                                }
                            } else {
                                if (snap.child(observedMonth + 1).child(dayNum).val() != null) {
                                    approved = 0;
                                }
                            }
                        }

                        if (approved == 1) {
                            for(let i = 0; i<=periode;i++) {
                                dayNum = Number(i) + Number(fra);
                                if (Number(numberWeekdays) < dayNum) {
                                    database.child(observedYear).child(observedMonth + 2).child(dayNum + newMonthStartDay - Number(numberWeekdays)).set({
                                        Navn: navn,
                                        Gruppe: gruppe,
                                        Gruppenavn: gruppenavn,
                                        Password: kode
                                    });
                                } else {
                                    document.getElementById("R"      + (Number(fra) + startNumber + i)).classList.remove("reservation");
                                    document.getElementById("R"      + (Number(fra) + startNumber + i)).classList.add(gruppe);
                                    document.getElementById("navn"   + (Number(fra) + startNumber + i)).innerHTML = "Navn: " + "<br>" + navn  ;
                                    document.getElementById("gruppe" + (Number(fra) + startNumber + i)).innerHTML = "Gruppe: " + "<br>" + gruppenavn;
                                    database.child(observedYear).child(observedMonth + 1).child(dayNum).set({
                                        Navn: navn,
                                        Gruppe: gruppe,
                                        Gruppenavn: gruppenavn,
                                        Password: kode
                                    });
                                }
                            }
                            localStorage.setItem("Navn",navn);
                            localStorage.setItem("Gruppe",gruppe);
                            localStorage.setItem("Kode",kode);
                            document.getElementById("formR").style.display = "none";
                        } else {
                            alert("Der er dage som ikke er dine, der bliver overskrevet");
                        }
                    });
                } else {
                    database.child(observedYear).get().then((snap) => {
                        for (let k = 0; k<=periode;k++){
                            if (snap.child(observedMonth + 1).child(Number(fra) + Number(k)).val() != null) {
                                approved = 0;
                            }
                        }

                        if (approved == 1) {
                            for(let i = 0; i<=periode;i++) {
                                document.getElementById("R"      + (Number(fra) + startNumber + i)).classList.remove("reservation");
                                document.getElementById("R"      + (Number(fra) + startNumber + i)).classList.add(gruppe);
                                document.getElementById("navn"   + (Number(fra) + startNumber + i)).innerHTML = "Navn: " + "<br>" + navn  ;
                                document.getElementById("gruppe" + (Number(fra) + startNumber + i)).innerHTML = "Gruppe: " + "<br>" + gruppenavn;
                                database.child(observedYear).child(observedMonth + 1).child(Number(fra) + Number(i)).set({
                                    Navn: navn,
                                    Gruppe: gruppe,
                                    Gruppenavn: gruppenavn,
                                    Password: kode
                                });
                            }
                            localStorage.setItem("Navn",navn);
                            localStorage.setItem("Gruppe",gruppe);
                            localStorage.setItem("Kode",kode);
                            document.getElementById("formR").style.display = "none";
                        } else {
                            alert("Nogle af datoerne er reserveret");
                        }
                    });
                }
            }
        }
    } else {
        alert("Der mangler at blive indtastet noget");
    }
}

function Slet() {
    let nyKode = document.getElementsByTagName('input')[2].value;
    let data = 0;
    let sweetChildOfMine = 0;

    database.once('value', snap => {
        data = snap.child(observedYear + '/' + (observedMonth + 1)+ '/' + nummerCur).val();
        sweetChildOfMine = database.child(observedYear + '/' + (observedMonth + 1)+ '/' + nummerCur);
        if(nyKode == data.Password){
            sweetChildOfMine.remove();
            document.getElementById("formP").style.display = "none";
            document.getElementById("navn"   + nummerCur).innerHTML = "Navn: ";
            document.getElementById("gruppe" + nummerCur).innerHTML = "Gruppe: ";
            document.getElementById("R"      + nummerCur).classList.remove(data.Gruppe);
            document.getElementById("R"      + nummerCur).classList.add("reservation");
        } else {
            alert("Forkert password");
        }
    });
}

function Ændre() {
    let nyKode    = document.getElementsByTagName('input')[2].value;
    let gamleKode = 0;
    localStorage.setItem("Kode",nyKode);
    database.once('value', snap => {
        gamleKode = snap.child(observedYear + '/' + (observedMonth + 1)+ '/' + nummerCur + '/Password').val();

        if(nyKode == gamleKode){
            changeAllowed = 1;
            document.getElementById("formP").style.display = "none";
            document.getElementById("formR").style.display = "block";
            if(localStorage.getItem("Navn") != null) {
                document.getElementsByTagName('input')[0].value = localStorage.getItem("Navn");
                document.getElementById("gruppe").value = localStorage.getItem("Gruppe");
                document.getElementsByTagName('input')[1].value = localStorage.getItem("Kode");
            }
            let mTal = localStorage.getItem("tal");
            document.getElementById("fra").value = mTal - startNumber;
            document.getElementById("til").value = mTal - startNumber;
        } else {
            alert("Forkert password");
        }
    });
}

function cleanDatabase(year) {
    database.once('value', snap => {
        let twoYear = snap.child((year-3)).val();
        if ( twoYear != null) {
            database.child((year-3)).remove();
        }
    });
}

function findFirstDay(date) {
    let startDay = date.toLocaleDateString("en-GB", { weekday: 'long' });

    switch(startDay) {
        case "Monday": return 0;
        break;
        case "Tuesday": return 1;
        break;
        case "Wednesday": return 2;
        break;
        case "Thursday": return 3;
        break;
        case "Friday": return 4;
        break;
        case "Saturday": return 5;
        break;
        case "Sunday": return 6;
        break;
    }
}